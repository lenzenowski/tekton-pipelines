#       Copyright 2017-2019 IBM Corp All Rights Reserved

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

# remarks
# # CHECKOUT_DIR="$(inputs.params.sourceDir)/"

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: init-pipeline
spec:
  params:
    - name: uid
      type: string
      description: Unique build Uid
    - name: appUrl
      description: git url to clone
      type: string
    - name: appRevision
      description: git revision to checkout (branch, tag, sha, ref…)
      type: string
      default: master
    - name: envUrl
      description: git url to clone
      type: string
    - name: envRevision
      description: git revision to checkout (branch, tag, sha, ref…)
      type: string
      default: master
    - name: sslVerify
      description: defines if http.sslVerify should be set to true or false in the global git config
      type: string
      default: "false"
    - name: env
      description: Name of the yaml file containing the env variables
      type: string
  workspaces:
  - name: pipeline
  results:
  - name: env_commit
    description: The checked out commit hash
  - name: app_commit
    description: The checked out commit hash
  - name: paramSh
    description: The sh file to source all parameters
  - name: appDir
  - name: envDir
  steps:
  - name: create-directories
    image: alpine:latest
    script: |
      mkdir "$(workspaces.pipeline.path)/$(inputs.params.uid)"
      mkdir "$(workspaces.pipeline.path)/$(inputs.params.uid)/app"
      mkdir "$(workspaces.pipeline.path)/$(inputs.params.uid)/env"
      ls -la "$(workspaces.pipeline.path)/"
      ls -la "$(workspaces.pipeline.path)/$(inputs.params.uid)/"
    securityContext:
      runAsUser: 0
  - name: clone-app
    image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:latest
    script: |
      CHECKOUT_DIR="$(workspaces.pipeline.path)/$(inputs.params.uid)/app"

      /ko-app/git-init \
        -url "$(inputs.params.appUrl)" \
        -revision "$(inputs.params.appRevision)" \
        -path "$CHECKOUT_DIR" \
        -sslVerify "$(inputs.params.sslVerify)"
      cd "$CHECKOUT_DIR"
      RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"
      EXIT_CODE="$?"
      if [ "$EXIT_CODE" != 0 ]
      then
        exit $EXIT_CODE
      fi

      ls -la $CHECKOUT_DIR
      # Make sure we don't add a trailing newline to the result!
      echo -n "$RESULT_SHA" > /tekton/results/app_commit
    securityContext:
      runAsUser: 0
  - name: clone-params
    image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:latest
    script: |
      CHECKOUT_DIR="$(workspaces.pipeline.path)/$(inputs.params.uid)/env"

      /ko-app/git-init \
        -url "$(inputs.params.envUrl)" \
        -revision "$(inputs.params.envRevision)" \
        -path "$CHECKOUT_DIR" \
        -sslVerify "$(inputs.params.sslVerify)"
      cd "$CHECKOUT_DIR"
      RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"
      EXIT_CODE="$?"
      if [ "$EXIT_CODE" != 0 ]
      then
        exit $EXIT_CODE
      fi

      ls -la $CHECKOUT_DIR
      # Make sure we don't add a trailing newline to the result!
      echo -n "$RESULT_SHA" > /tekton/results/env_commit
    securityContext:
      runAsUser: 0
  - name: extract-parameters
    image: alpine:latest
    script: |
      ls -la "$(workspaces.pipeline.path)/$(inputs.params.uid)/"
      ls -la "$(workspaces.pipeline.path)/$(inputs.params.uid)/app/"
      ls -la "$(workspaces.pipeline.path)/$(inputs.params.uid)/env/"

      echo -n "$(workspaces.pipeline.path)/$(inputs.params.uid)/app/" > /tekton/results/appDir
      echo -n "$(workspaces.pipeline.path)/$(inputs.params.uid)/env/" > /tekton/results/envDir

      cat "$(workspaces.pipeline.path)/$(inputs.params.uid)/app/build_parameters.sh"
      cat "$(workspaces.pipeline.path)/$(inputs.params.uid)/env/$(inputs.params.env)"

      echo "#!/bin/bash" > "$(workspaces.pipeline.path)/$(inputs.params.uid)/parms.sh"
      echo "source $(workspaces.pipeline.path)/$(inputs.params.uid)/app/build_parameters.sh" >> "$(workspaces.pipeline.path)/$(inputs.params.uid)/parms.sh"
      echo "source $(workspaces.pipeline.path)/$(inputs.params.uid)/env/$(inputs.params.env)" >> "$(workspaces.pipeline.path)/$(inputs.params.uid)/parms.sh"

      source "$(workspaces.pipeline.path)/$(inputs.params.uid)/parms.sh"
      echo "container_path=$env_container_registry/$image_namespace/$image_name:$image_tag" >> "$(workspaces.pipeline.path)/$(inputs.params.uid)/parms.sh"

      echo -n "$(workspaces.pipeline.path)/$(inputs.params.uid)/parms.sh" > /tekton/results/paramSh
    securityContext:
      runAsUser: 0